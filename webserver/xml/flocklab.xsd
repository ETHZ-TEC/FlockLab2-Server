<?xml version="1.0" encoding="UTF-8"?>

<!--
	/*
	 * XML schema for FlockLab test configuration XMLs. 
	 * This schema can be downloaded from https://user.flocklab.ethz.ch/xml/flocklab.xsd
	 * Help is available at https://gitlab.ethz.ch/tec/public/flocklab/wiki/-/wikis/Man/XmlConfig
	 */
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.flocklab.ethz.ch" xmlns="http://www.flocklab.ethz.ch" elementFormDefault="qualified">

<!-- ############################################################################### 
     # The following block is the main schema for a FlockLab test.                 #
     # It defines which elements have to be present in a valid XML configuration.  #
     ############################################################################### -->
<!-- testConf is the root element of the XML schema. It can only be present once. -->
<xs:element name="testConf">
  <xs:complexType>
    <xs:sequence>
      <xs:group ref="services" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:sequence>
          <xs:element name="generalConf" type="generalConfType" minOccurs="1" maxOccurs="1"/>
          <xs:group ref="services" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="targetConf" type="targetConfType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element name="targetConf" type="targetConfType" minOccurs="1" maxOccurs="unbounded"/>
          <xs:group ref="services" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="generalConf" type="generalConfType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
      </xs:choice>
      <xs:group ref="services" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<!-- ############################################################################### 
     # Choice of available services                                                #
     ############################################################################### -->
<xs:group name="services">
  <xs:choice>
    <!-- Serial service configuration. If service is not to be used, do not specify this element. -->
    <xs:element name="serialConf" type="serialConfType"/>
    <!-- GPIO tracing service configuration. If service is not to be used, do not specify this element. -->
    <xs:element name="gpioTracingConf" type="gpioTracingConfType"/>
    <!-- GPIO actuation service configuration. If service is not to be used, do not specify this element. -->
    <xs:element name="gpioActuationConf" type="gpioActuationConfType"/>
    <!-- Power profiling service configuration. If service is not to be used, do not specify this element. -->
    <xs:element name="powerProfilingConf" type="powerProfilingConfType"/>
    <!-- Target image configuration. If only images from database are to be used, do not specify this element. -->
    <xs:element name="embeddedImageConf" type="embeddedImageConfType"/>
    <!-- Debug service configuration. If service is not to be used, do not specify this element. -->
    <xs:element name="debugConf" type="debugConfType"/>
  </xs:choice>
</xs:group>


<!-- ############################################################################### 
     # The following blocks define the types of elements used in the main block    #
     # above.                                                                      #
     ############################################################################### -->
<!-- All elements needed for the general setup of a single FlockLab test -->
<xs:complexType name="generalConfType">
  <xs:sequence>
    <xs:element name="name">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="5"/>
          <xs:maxLength value="45"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:element name="description" minOccurs="0">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:maxLength value="512"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:element name="custom" minOccurs="0">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:maxLength value="4096"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:choice>
      <xs:element name="scheduleAbsolute">
        <xs:complexType>
          <xs:group ref="testDurationAbsoluteGroup"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="scheduleAsap">
        <xs:complexType>
          <xs:all>
            <xs:element name="durationSecs" type="testDurationSecsType"/>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="schedule">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="start" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="duration" type="testDurationSecsType"/>
            <xs:element name="start" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:element name="emailResults" minOccurs="0" default="no">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="yes|no"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:element name="abortOnError" minOccurs="0" default="no">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="yes|no"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
  </xs:sequence>
</xs:complexType>

      
<!-- Configuration of target adapters -->
<xs:complexType name="targetConfType">
  <xs:sequence>
    <xs:element name="obsIds" type="obsIdListRestType"/>
    <xs:element name="targetIds" type="targetIdListRestType" minOccurs="0"/>
    <xs:element name="voltage" minOccurs="0" default="3.3">
      <xs:simpleType>
        <xs:restriction base="xs:decimal">
          <xs:minInclusive value="1.8"/>
          <xs:maxInclusive value="3.6"/>
          <xs:fractionDigits value="1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:choice>
      <xs:group ref="targetimages" minOccurs="1" maxOccurs="4"/>
      <xs:element name="noImage" type="slotNrType"/>
    </xs:choice>
  </xs:sequence>
</xs:complexType>

<!-- ############################################################################### 
     # Choice of for target images                                                 #
     ############################################################################### -->
<xs:group name="targetimages">
  <xs:choice>
    <xs:element name="dbImageId" type="xs:integer"/>
    <xs:element name="embeddedImageId" type="embeddedImageIdType"/>
  </xs:choice>
</xs:group>

<!-- Configuration of target images -->
<xs:complexType name="embeddedImageConfType">
  <xs:all>
    <xs:element name="embeddedImageId" type="embeddedImageIdType"/>
    <xs:element name="name">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="5"/>
          <xs:maxLength value="45"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:element name="description" minOccurs="0">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:maxLength value="512"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:element name="platform" type="platformType"/>
    <xs:element name="data" type="xs:base64Binary"/>
	<xs:element name="core" type="xs:integer" minOccurs="0" maxOccurs="1"/>
  </xs:all>
</xs:complexType>


<!-- Configuration of the serial service -->
<xs:complexType name="serialConfType">
  <xs:all>
    <xs:element name="obsIds" type="obsIdListRestType"/>
    <xs:element name="port"  minOccurs="0">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="usb|serial|swo"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:element name="baudrate" minOccurs="0">
      <xs:simpleType>
        <xs:restriction base="xs:integer">
          <xs:enumeration value="9600"/>
          <xs:enumeration value="19200"/>
          <xs:enumeration value="38400"/>
          <xs:enumeration value="57600"/>
          <xs:enumeration value="115200"/>
          <xs:enumeration value="230400"/>
          <xs:enumeration value="460800"/>
          <xs:enumeration value="921600"/>
          <xs:enumeration value="1000000"/>
          <xs:enumeration value="1152000"/>
          <xs:enumeration value="1500000"/>
          <xs:enumeration value="2000000"/>
          <xs:enumeration value="2500000"/>
          <xs:enumeration value="3000000"/>
          <xs:enumeration value="3500000"/>
          <xs:enumeration value="4000000"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:element name="cpuSpeed" type="cpuSpeedType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="remoteIp" type="ipType" minOccurs="0"/>
  </xs:all>
</xs:complexType>


<!-- Configuration of the debug service -->
<xs:complexType name="debugConfType">
  <xs:sequence>
    <xs:element name="obsIds" type="obsIdListRestType"/>
    <xs:element name="cpuSpeed" type="cpuSpeedType" minOccurs="0" maxOccurs="1"/>
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="gdbPort" type="portType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="remoteIp" type="ipType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="dataTraceConf" minOccurs="0" maxOccurs="4">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="variable" type="xs:string" />
            <xs:element name="mode" type="dataTraceModeListType" minOccurs="0" />
            <xs:element name="size" minOccurs="0">
              <xs:simpleType>
                <xs:restriction base="xs:integer">
                  <xs:enumeration value="1"/>
                  <xs:enumeration value="2"/>
                  <xs:enumeration value="4"/>
                  <xs:enumeration value="8"/>
                  <xs:enumeration value="16"/>
                  <xs:enumeration value="32"/>
                  <xs:enumeration value="64"/>
                  <xs:enumeration value="128"/>
                  <xs:enumeration value="256"/>
                  <xs:enumeration value="512"/>
                  <xs:enumeration value="1024"/>
                  <xs:enumeration value="2048"/>
                  <xs:enumeration value="4096"/>
                  <xs:enumeration value="8192"/>
                  <xs:enumeration value="16384"/>
                  <xs:enumeration value="32768"/>
                  <xs:enumeration value="65536"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:sequence>
</xs:complexType>


<!-- Configuration of the GPIO tracing service -->
<xs:complexType name="gpioTracingConfType">
  <xs:sequence>
    <xs:element name="obsIds" type="obsIdListRestType"/>
    <xs:element name="pins" type="pinTracingListType" minOccurs="1" maxOccurs="1"/>
    <xs:element name="offset" type="offsetSecsType" minOccurs="0" maxOccurs="1"/>
  </xs:sequence>
</xs:complexType>


<!-- Configuration of the GPIO actuation service -->
<xs:complexType name="gpioActuationConfType">
  <xs:sequence>
    <xs:element name="obsIds" type="obsIdListRestType"/>
    <xs:element name="pinConf" type="gpioActuationPinConfType" minOccurs="1" maxOccurs="1000"/>
  </xs:sequence>
</xs:complexType>
<xs:complexType name="gpioActuationPinConfType">
  <xs:sequence>
    <xs:element name="pin" type="pinActType"/>
    <xs:element name="level" type="pinActLevelType"/>
    <xs:element name="offset" type="offsetSecsFloatType"/>
    <xs:element name="period" type="periodSecsFloatType" minOccurs="0"/>
    <xs:element name="count" type="periodicCountType" minOccurs="0"/>
  </xs:sequence>
</xs:complexType>


<!-- Configuration of the power profiling service -->
<xs:complexType name="powerProfilingConfType">
  <xs:sequence>
    <xs:element name="obsIds" type="obsIdListRestType"/>
    <xs:element name="offset" type="offsetSecsType" minOccurs="1" maxOccurs="1"/>
    <xs:choice minOccurs="0" maxOccurs="3">
      <xs:element name="fileFormat" type="profConfFileFormat" minOccurs="0" maxOccurs="1"/>
      <xs:element name="duration" type="powerProfDurationType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="samplingRate" type="powerProfSamplingRateType" minOccurs="0" maxOccurs="1"/>
    </xs:choice>
  </xs:sequence>
</xs:complexType>


<!-- ############################################################################### 
     # The following blocks define helper types for custom types that are used in  #
     # several configurations.                                                     #
     ############################################################################### -->

<!-- Type definition for platforms -->
<xs:simpleType name="platformType">
  <xs:restriction base="xs:string">
    <xs:pattern value="tmote|dpp|dpp2lora|dpp2lorahg|nrf5"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definitions for observer IDs -->
<xs:simpleType name="obsIdListRestType">
  <xs:restriction base="obsIdListType">
  	<xs:minLength value="1"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="obsIdListType">
  <xs:list itemType="obsIdType"/>
</xs:simpleType>

<xs:simpleType name="obsIdType">
  <xs:restriction base="xs:string">
    <xs:pattern value="1|01|2|02|3|03|4|04|5|05|6|06|7|07|8|08|9|09|10|11|12|13|15|16|17|19|20|21|22|23|24|25|26|27|28|29|30|31|32|ALL"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for target IDs -->
<xs:simpleType name="targetIdListRestType">
  <xs:restriction base="targetIdListType">
  	<xs:minLength value="1"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="targetIdListType">
  <xs:list itemType="xs:unsignedShort"/>
</xs:simpleType>

<!-- Type definition for embedded target image IDs -->
<xs:simpleType name="embeddedImageIdType">
  <xs:restriction base="xs:string">
    <xs:pattern value="([a-zA-Z0-9_])+"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for tracable GPIOs -->
<xs:simpleType name="pinTracingType">
  <xs:restriction base="xs:string">
    <xs:pattern value="INT1|INT2|LED1|LED2|LED3"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="pinTracingListType">
  <xs:list itemType="pinTracingType"/>
</xs:simpleType>

<!-- Type definition for actuation enabled GPIOs -->
<xs:simpleType name="pinActType">
  <xs:restriction base="xs:string">
    <xs:pattern value="SIG1|SIG2|nRST"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for actuation enabled GPIO levels -->
<xs:simpleType name="pinActLevelType">
  <xs:restriction base="xs:string">
    <xs:pattern value="low|high|toggle"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for power profiling file format -->
<xs:simpleType name="profConfFileFormat">
  <xs:restriction base="xs:string">
    <xs:enumeration value="csv"/>
    <xs:enumeration value="rld"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for duration of a power profile in seconds -->
<xs:simpleType name="powerProfDurationType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="1"/>
    <xs:maxInclusive value="3600"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for samling rate of a power profile -->
<xs:simpleType name="powerProfSamplingRateType">
  <xs:restriction base="xs:integer">
    <xs:pattern value="1|10|100|1000|2000|4000|8000|16000|32000|64000"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for time offset in seconds -->
<xs:simpleType name="offsetSecsType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="0"/>
    <xs:maxInclusive value="3600"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for time offset in seconds -->
<xs:simpleType name="offsetSecsFloatType">
  <xs:restriction base="xs:float">
    <xs:minInclusive value="0.0"/>
    <xs:maxInclusive value="4294.967295"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="periodSecsFloatType">
  <xs:restriction base="xs:float">
    <xs:minInclusive value="0.001"/>
    <xs:maxInclusive value="1000.0"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for time offset in microseconds -->
<xs:simpleType name="microsecsType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="0"/>
    <xs:maxInclusive value="999999"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for slot assignements -->
<xs:simpleType name="slotNrType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="1"/>
    <xs:maxInclusive value="4"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for test duration in seconds -->
<xs:simpleType name="testDurationSecsType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="20"/>
  </xs:restriction>
</xs:simpleType>

<!-- Group definition for test start/end -->
<xs:group name="testDurationAbsoluteGroup">
  <xs:all>
    <xs:element name="start" type="xs:dateTime"/>
    <xs:element name="end" type="xs:dateTime"/>
  </xs:all>
</xs:group>

<!-- Type definition for unsigned int -->
<xs:simpleType name="unsignedIntType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="0"/>
    <xs:maxInclusive value="4294967295"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="periodicCountType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="1"/>
    <xs:maxInclusive value="500"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for IP addresses -->
<xs:simpleType name="ipType">
  <xs:restriction base="xs:string">
    <xs:pattern value="((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])|(\s*)"/>
  </xs:restriction>
</xs:simpleType>

<!-- Type definition for TCP port -->
<xs:simpleType name="portType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="1025"/>
    <xs:maxInclusive value="65535"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="dataTraceModeType">
  <xs:restriction base="xs:string">
    <xs:pattern value="R|W|RW|PC"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="cpuSpeedType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="1000000"/>
    <xs:maxInclusive value="80000000"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="dataTraceModeListType">
  <xs:list itemType="dataTraceModeType"/>
</xs:simpleType>

</xs:schema>
